<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.lbartolini.app</groupId>
  <artifactId>cinema</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>cinema</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <junit.version>4.13.2</junit.version>
    <pitest.version>1.5.2</pitest.version>
    <jacoco.version>0.8.12</jacoco.version>
    <mockito.version>4.11.0</mockito.version>
    <assertj.version>3.17.1</assertj.version>
    <coveralls.version>4.5.0-M6</coveralls.version>
    <surefire-report.version>3.5.3</surefire-report.version>
    <testcontainers.version>1.21.0</testcontainers.version>
    <mongo.version>3.12.14</mongo.version>
    <logback.version>1.2.13</logback.version>
    <buildhelper.version>3.6.0</buildhelper.version>
    <failsafe.version>3.5.2</failsafe.version>
    <cucumber.version>5.5.0</cucumber.version>
    <picocli.version>4.7.7</picocli.version>
    <dockermavenplugin.version>0.46.0</dockermavenplugin.version>

    <sonar.coverage.exclusions>
      **/model/*.*
      **/CinemaSwingApp.*
    </sonar.coverage.exclusions>
    <sonar.junit.reportPaths>
      ${project.build.directory}/surefire-reports
    </sonar.junit.reportPaths>

    <sonar.issue.ignore.multicriteria>e11, e12, e13, e14, e15</sonar.issue.ignore.multicriteria>

    <!-- Constructor has too many parameters -->
    <sonar.issue.ignore.multicriteria.e11.ruleKey>
      java:S107
    </sonar.issue.ignore.multicriteria.e11.ruleKey>
    <sonar.issue.ignore.multicriteria.e11.resourceKey>
      **/model/Film.java
    </sonar.issue.ignore.multicriteria.e11.resourceKey>

    <!-- Duplicated literal -->
    <sonar.issue.ignore.multicriteria.e12.ruleKey>
      java:S1192
    </sonar.issue.ignore.multicriteria.e12.ruleKey>
    <sonar.issue.ignore.multicriteria.e12.resourceKey>
      **/repository/mongo/UserMongoRepository.java
    </sonar.issue.ignore.multicriteria.e12.resourceKey>

    <!-- Naming convention (Swing autogenerated code)-->
    <sonar.issue.ignore.multicriteria.e13.ruleKey>
      java:S116
    </sonar.issue.ignore.multicriteria.e13.ruleKey>
    <sonar.issue.ignore.multicriteria.e13.resourceKey>
      **/CinemaSwingView.java
    </sonar.issue.ignore.multicriteria.e13.resourceKey>

    <!-- Naming convention (Swing autogenerated code)-->
    <sonar.issue.ignore.multicriteria.e14.ruleKey>
      java:S117
    </sonar.issue.ignore.multicriteria.e14.ruleKey>
    <sonar.issue.ignore.multicriteria.e14.resourceKey>
      **/CinemaSwingView.java
    </sonar.issue.ignore.multicriteria.e14.resourceKey>

    <!-- At least one assertion (GUI tests) -->
    <sonar.issue.ignore.multicriteria.e15.ruleKey>
      java:S2699
    </sonar.issue.ignore.multicriteria.e15.ruleKey>
    <sonar.issue.ignore.multicriteria.e15.resourceKey>
      **/CinemaSwingViewTest.java
    </sonar.issue.ignore.multicriteria.e15.resourceKey>

  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-swing-junit</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongo-java-driver</artifactId>
      <version>${mongo.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>mongodb</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-java</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-junit</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
      <version>${picocli.version}</version>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>${surefire-report.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
          <configuration>
            <excludes>
              <exclude>**/model/*.*</exclude>
              <exclude>**/CinemaSwingApp.*</exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>prepare-agent</goal>
                <goal>report</goal>
              </goals>
            </execution>
            <execution>
              <id>jacoco-check</id>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <rules>
                  <rule>
                    <element>PACKAGE</element>
                    <limits>
                      <limit>
                        <counter>LINE</counter>
                        <value>COVEREDRATIO</value>
                        <minimum>1</minimum>
                      </limit>
                    </limits>
                  </rule>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.github.hazendaz.maven</groupId>
          <artifactId>coveralls-maven-plugin</artifactId>
          <version>${coveralls.version}</version>
          <configuration>
            <repoToken>${env.COVERALLS_REPO_TOKEN}</repoToken>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.pitest</groupId>
          <artifactId>pitest-maven</artifactId>
          <version>${pitest.version}</version>
          <configuration>
            <targetClasses>
              <param>com.lbartolini.app.cinema.controller.*</param>
              <param>com.lbartolini.app.cinema.repository.*</param>
            </targetClasses>
            <targetTests>
              <param>com.lbartolini.app.cinema.controller.*</param>
              <param>com.lbartolini.app.cinema.repository.*</param>
            </targetTests>
            <mutators>
              <mutator>DEFAULTS</mutator>
            </mutators>
            <mutationThreshold>100</mutationThreshold>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${buildhelper.version}</version>
        <executions>
          <execution>
            <id>add-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/it/java</source>
                <source>src/bdd/java</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-test-resource</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>add-test-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>src/bdd/resources</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${failsafe.version}</version>
        <configuration>
          <systemPropertyVariables>
            <mongo.port>${mongo.mapped.port}</mongo.port>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <id>default-it</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
          <execution>
            <id>BDD-tests</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>**/*IT.java</exclude>
              </excludes>
              <includes>
                <include>**/*BDD.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${dockermavenplugin.version}</version>
        <configuration>
          <images>
            <image>
              <name>mongo:4.4.3</name>
              <run>
                <ports>
                  <port>mongo.mapped.port:27017</port>
                </ports>
              </run>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>docker-start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>docker-stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>jacoco</id>
      <activation>
        <property>
          <name>skipCoverage</name>
          <value>!true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>mutation-testing</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-maven</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>mutationCoverage</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>coveralls</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>com.github.hazendaz.maven</groupId>
            <artifactId>coveralls-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>verify</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
